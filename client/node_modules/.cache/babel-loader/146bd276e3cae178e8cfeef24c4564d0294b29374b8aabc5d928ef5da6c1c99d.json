{"ast":null,"code":"const {\n  axiosInstance\n} = require('./index.js');\nexport const RegisterUser = async value => {\n  try {\n    const response = await axiosInstance.post('api/users/Register', value);\n    return response;\n  } catch (error) {\n    console.log(\"Error: \", error);\n    return error;\n  }\n};\n_c = RegisterUser;\nexport const LoginUser = async value => {\n  try {\n    const response = await axiosInstance.post('api/users/login', value);\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\n_c2 = LoginUser;\nvar _c, _c2;\n$RefreshReg$(_c, \"RegisterUser\");\n$RefreshReg$(_c2, \"LoginUser\");","map":{"version":3,"names":["axiosInstance","require","RegisterUser","value","response","post","error","console","log","_c","LoginUser","_c2","$RefreshReg$"],"sources":["C:/Users/JASH/Desktop/MongoDB/authpage/client/src/calls/users.js"],"sourcesContent":["const{axiosInstance} = require('./index.js');\r\n\r\nexport const RegisterUser = async (value) => {\r\n    try {\r\n        const response = await axiosInstance.post('api/users/Register', value);\r\n        return response;\r\n    } catch (error) {\r\n        console.log(\"Error: \", error);\r\n        return error;\r\n    }\r\n};\r\n\r\nexport const LoginUser = async (value) => {\r\n    try {\r\n        const response = await axiosInstance.post('api/users/login', value);\r\n        return response;\r\n    } catch (error) {\r\n        return error;\r\n    }\r\n};"],"mappings":"AAAA,MAAK;EAACA;AAAa,CAAC,GAAGC,OAAO,CAAC,YAAY,CAAC;AAE5C,OAAO,MAAMC,YAAY,GAAG,MAAOC,KAAK,IAAK;EACzC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,aAAa,CAACK,IAAI,CAAC,oBAAoB,EAAEF,KAAK,CAAC;IACtE,OAAOC,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,KAAK,CAAC;IAC7B,OAAOA,KAAK;EAChB;AACJ,CAAC;AAACG,EAAA,GARWP,YAAY;AAUzB,OAAO,MAAMQ,SAAS,GAAG,MAAOP,KAAK,IAAK;EACtC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMJ,aAAa,CAACK,IAAI,CAAC,iBAAiB,EAAEF,KAAK,CAAC;IACnE,OAAOC,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOA,KAAK;EAChB;AACJ,CAAC;AAACK,GAAA,GAPWD,SAAS;AAAA,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}